// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: transform.proto
// Protobuf C++ Version: 5.28.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_transform_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_transform_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_transform_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_transform_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_transform_2eproto;
namespace PicachvMessages {
class FilterInformation;
struct FilterInformationDefaultTypeInternal;
extern FilterInformationDefaultTypeInternal _FilterInformation_default_instance_;
class GroupByInformation;
struct GroupByInformationDefaultTypeInternal;
extern GroupByInformationDefaultTypeInternal _GroupByInformation_default_instance_;
class GroupByInformation_GroupByEntry_DoNotUse;
struct GroupByInformation_GroupByEntry_DoNotUseDefaultTypeInternal;
extern GroupByInformation_GroupByEntry_DoNotUseDefaultTypeInternal _GroupByInformation_GroupByEntry_DoNotUse_default_instance_;
class JoinInformation;
struct JoinInformationDefaultTypeInternal;
extern JoinInformationDefaultTypeInternal _JoinInformation_default_instance_;
class JoinInformation_RenamingInformation;
struct JoinInformation_RenamingInformationDefaultTypeInternal;
extern JoinInformation_RenamingInformationDefaultTypeInternal _JoinInformation_RenamingInformation_default_instance_;
class JoinInformation_RowJoinInformation;
struct JoinInformation_RowJoinInformationDefaultTypeInternal;
extern JoinInformation_RowJoinInformationDefaultTypeInternal _JoinInformation_RowJoinInformation_default_instance_;
class ReorderInformation;
struct ReorderInformationDefaultTypeInternal;
extern ReorderInformationDefaultTypeInternal _ReorderInformation_default_instance_;
class TransformInfo;
struct TransformInfoDefaultTypeInternal;
extern TransformInfoDefaultTypeInternal _TransformInfo_default_instance_;
class TransformInfo_Information;
struct TransformInfo_InformationDefaultTypeInternal;
extern TransformInfo_InformationDefaultTypeInternal _TransformInfo_Information_default_instance_;
class UnionInformation;
struct UnionInformationDefaultTypeInternal;
extern UnionInformationDefaultTypeInternal _UnionInformation_default_instance_;
}  // namespace PicachvMessages
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace PicachvMessages {

// ===================================================================


// -------------------------------------------------------------------

class UnionInformation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PicachvMessages.UnionInformation) */ {
 public:
  inline UnionInformation() : UnionInformation(nullptr) {}
  ~UnionInformation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UnionInformation(
      ::google::protobuf::internal::ConstantInitialized);

  inline UnionInformation(const UnionInformation& from) : UnionInformation(nullptr, from) {}
  inline UnionInformation(UnionInformation&& from) noexcept
      : UnionInformation(nullptr, std::move(from)) {}
  inline UnionInformation& operator=(const UnionInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnionInformation& operator=(UnionInformation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnionInformation& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnionInformation* internal_default_instance() {
    return reinterpret_cast<const UnionInformation*>(
        &_UnionInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(UnionInformation& a, UnionInformation& b) { a.Swap(&b); }
  inline void Swap(UnionInformation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnionInformation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnionInformation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UnionInformation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnionInformation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UnionInformation& from) { UnionInformation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UnionInformation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PicachvMessages.UnionInformation"; }

 protected:
  explicit UnionInformation(::google::protobuf::Arena* arena);
  UnionInformation(::google::protobuf::Arena* arena, const UnionInformation& from);
  UnionInformation(::google::protobuf::Arena* arena, UnionInformation&& from) noexcept
      : UnionInformation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLhsDfUuidFieldNumber = 1,
    kRhsDfUuidFieldNumber = 2,
  };
  // bytes lhs_df_uuid = 1;
  void clear_lhs_df_uuid() ;
  const std::string& lhs_df_uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lhs_df_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_lhs_df_uuid();
  PROTOBUF_NODISCARD std::string* release_lhs_df_uuid();
  void set_allocated_lhs_df_uuid(std::string* value);

  private:
  const std::string& _internal_lhs_df_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lhs_df_uuid(
      const std::string& value);
  std::string* _internal_mutable_lhs_df_uuid();

  public:
  // bytes rhs_df_uuid = 2;
  void clear_rhs_df_uuid() ;
  const std::string& rhs_df_uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rhs_df_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_rhs_df_uuid();
  PROTOBUF_NODISCARD std::string* release_rhs_df_uuid();
  void set_allocated_rhs_df_uuid(std::string* value);

  private:
  const std::string& _internal_rhs_df_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rhs_df_uuid(
      const std::string& value);
  std::string* _internal_mutable_rhs_df_uuid();

  public:
  // @@protoc_insertion_point(class_scope:PicachvMessages.UnionInformation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UnionInformation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UnionInformation& from_msg);
    ::google::protobuf::internal::ArenaStringPtr lhs_df_uuid_;
    ::google::protobuf::internal::ArenaStringPtr rhs_df_uuid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transform_2eproto;
};
// -------------------------------------------------------------------

class ReorderInformation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PicachvMessages.ReorderInformation) */ {
 public:
  inline ReorderInformation() : ReorderInformation(nullptr) {}
  ~ReorderInformation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReorderInformation(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReorderInformation(const ReorderInformation& from) : ReorderInformation(nullptr, from) {}
  inline ReorderInformation(ReorderInformation&& from) noexcept
      : ReorderInformation(nullptr, std::move(from)) {}
  inline ReorderInformation& operator=(const ReorderInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReorderInformation& operator=(ReorderInformation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReorderInformation& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReorderInformation* internal_default_instance() {
    return reinterpret_cast<const ReorderInformation*>(
        &_ReorderInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ReorderInformation& a, ReorderInformation& b) { a.Swap(&b); }
  inline void Swap(ReorderInformation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReorderInformation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReorderInformation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ReorderInformation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReorderInformation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReorderInformation& from) { ReorderInformation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReorderInformation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PicachvMessages.ReorderInformation"; }

 protected:
  explicit ReorderInformation(::google::protobuf::Arena* arena);
  ReorderInformation(::google::protobuf::Arena* arena, const ReorderInformation& from);
  ReorderInformation(::google::protobuf::Arena* arena, ReorderInformation&& from) noexcept
      : ReorderInformation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPermFieldNumber = 2,
    kDfUuidFieldNumber = 1,
  };
  // repeated uint64 perm = 2;
  int perm_size() const;
  private:
  int _internal_perm_size() const;

  public:
  void clear_perm() ;
  ::uint64_t perm(int index) const;
  void set_perm(int index, ::uint64_t value);
  void add_perm(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& perm() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_perm();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_perm() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_perm();

  public:
  // bytes df_uuid = 1;
  void clear_df_uuid() ;
  const std::string& df_uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_df_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_df_uuid();
  PROTOBUF_NODISCARD std::string* release_df_uuid();
  void set_allocated_df_uuid(std::string* value);

  private:
  const std::string& _internal_df_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_df_uuid(
      const std::string& value);
  std::string* _internal_mutable_df_uuid();

  public:
  // @@protoc_insertion_point(class_scope:PicachvMessages.ReorderInformation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReorderInformation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReorderInformation& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> perm_;
    mutable ::google::protobuf::internal::CachedSize _perm_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr df_uuid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transform_2eproto;
};
// -------------------------------------------------------------------

class JoinInformation_RowJoinInformation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PicachvMessages.JoinInformation.RowJoinInformation) */ {
 public:
  inline JoinInformation_RowJoinInformation() : JoinInformation_RowJoinInformation(nullptr) {}
  ~JoinInformation_RowJoinInformation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JoinInformation_RowJoinInformation(
      ::google::protobuf::internal::ConstantInitialized);

  inline JoinInformation_RowJoinInformation(const JoinInformation_RowJoinInformation& from) : JoinInformation_RowJoinInformation(nullptr, from) {}
  inline JoinInformation_RowJoinInformation(JoinInformation_RowJoinInformation&& from) noexcept
      : JoinInformation_RowJoinInformation(nullptr, std::move(from)) {}
  inline JoinInformation_RowJoinInformation& operator=(const JoinInformation_RowJoinInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoinInformation_RowJoinInformation& operator=(JoinInformation_RowJoinInformation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JoinInformation_RowJoinInformation& default_instance() {
    return *internal_default_instance();
  }
  static inline const JoinInformation_RowJoinInformation* internal_default_instance() {
    return reinterpret_cast<const JoinInformation_RowJoinInformation*>(
        &_JoinInformation_RowJoinInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(JoinInformation_RowJoinInformation& a, JoinInformation_RowJoinInformation& b) { a.Swap(&b); }
  inline void Swap(JoinInformation_RowJoinInformation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoinInformation_RowJoinInformation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JoinInformation_RowJoinInformation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<JoinInformation_RowJoinInformation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JoinInformation_RowJoinInformation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JoinInformation_RowJoinInformation& from) { JoinInformation_RowJoinInformation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JoinInformation_RowJoinInformation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PicachvMessages.JoinInformation.RowJoinInformation"; }

 protected:
  explicit JoinInformation_RowJoinInformation(::google::protobuf::Arena* arena);
  JoinInformation_RowJoinInformation(::google::protobuf::Arena* arena, const JoinInformation_RowJoinInformation& from);
  JoinInformation_RowJoinInformation(::google::protobuf::Arena* arena, JoinInformation_RowJoinInformation&& from) noexcept
      : JoinInformation_RowJoinInformation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeftRowFieldNumber = 1,
    kRightRowFieldNumber = 2,
  };
  // uint64 left_row = 1;
  void clear_left_row() ;
  ::uint64_t left_row() const;
  void set_left_row(::uint64_t value);

  private:
  ::uint64_t _internal_left_row() const;
  void _internal_set_left_row(::uint64_t value);

  public:
  // uint64 right_row = 2;
  void clear_right_row() ;
  ::uint64_t right_row() const;
  void set_right_row(::uint64_t value);

  private:
  ::uint64_t _internal_right_row() const;
  void _internal_set_right_row(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:PicachvMessages.JoinInformation.RowJoinInformation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_JoinInformation_RowJoinInformation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JoinInformation_RowJoinInformation& from_msg);
    ::uint64_t left_row_;
    ::uint64_t right_row_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transform_2eproto;
};
// -------------------------------------------------------------------

class JoinInformation_RenamingInformation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PicachvMessages.JoinInformation.RenamingInformation) */ {
 public:
  inline JoinInformation_RenamingInformation() : JoinInformation_RenamingInformation(nullptr) {}
  ~JoinInformation_RenamingInformation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JoinInformation_RenamingInformation(
      ::google::protobuf::internal::ConstantInitialized);

  inline JoinInformation_RenamingInformation(const JoinInformation_RenamingInformation& from) : JoinInformation_RenamingInformation(nullptr, from) {}
  inline JoinInformation_RenamingInformation(JoinInformation_RenamingInformation&& from) noexcept
      : JoinInformation_RenamingInformation(nullptr, std::move(from)) {}
  inline JoinInformation_RenamingInformation& operator=(const JoinInformation_RenamingInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoinInformation_RenamingInformation& operator=(JoinInformation_RenamingInformation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JoinInformation_RenamingInformation& default_instance() {
    return *internal_default_instance();
  }
  static inline const JoinInformation_RenamingInformation* internal_default_instance() {
    return reinterpret_cast<const JoinInformation_RenamingInformation*>(
        &_JoinInformation_RenamingInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(JoinInformation_RenamingInformation& a, JoinInformation_RenamingInformation& b) { a.Swap(&b); }
  inline void Swap(JoinInformation_RenamingInformation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoinInformation_RenamingInformation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JoinInformation_RenamingInformation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<JoinInformation_RenamingInformation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JoinInformation_RenamingInformation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JoinInformation_RenamingInformation& from) { JoinInformation_RenamingInformation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JoinInformation_RenamingInformation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PicachvMessages.JoinInformation.RenamingInformation"; }

 protected:
  explicit JoinInformation_RenamingInformation(::google::protobuf::Arena* arena);
  JoinInformation_RenamingInformation(::google::protobuf::Arena* arena, const JoinInformation_RenamingInformation& from);
  JoinInformation_RenamingInformation(::google::protobuf::Arena* arena, JoinInformation_RenamingInformation&& from) noexcept
      : JoinInformation_RenamingInformation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOldNameFieldNumber = 1,
    kNewNameFieldNumber = 2,
  };
  // string old_name = 1;
  void clear_old_name() ;
  const std::string& old_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_old_name(Arg_&& arg, Args_... args);
  std::string* mutable_old_name();
  PROTOBUF_NODISCARD std::string* release_old_name();
  void set_allocated_old_name(std::string* value);

  private:
  const std::string& _internal_old_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_old_name(
      const std::string& value);
  std::string* _internal_mutable_old_name();

  public:
  // string new_name = 2;
  void clear_new_name() ;
  const std::string& new_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_name(Arg_&& arg, Args_... args);
  std::string* mutable_new_name();
  PROTOBUF_NODISCARD std::string* release_new_name();
  void set_allocated_new_name(std::string* value);

  private:
  const std::string& _internal_new_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_name(
      const std::string& value);
  std::string* _internal_mutable_new_name();

  public:
  // @@protoc_insertion_point(class_scope:PicachvMessages.JoinInformation.RenamingInformation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      76, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_JoinInformation_RenamingInformation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JoinInformation_RenamingInformation& from_msg);
    ::google::protobuf::internal::ArenaStringPtr old_name_;
    ::google::protobuf::internal::ArenaStringPtr new_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transform_2eproto;
};
// -------------------------------------------------------------------

class GroupByInformation_GroupByEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GroupByInformation_GroupByEntry_DoNotUse, ::uint64_t, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GroupByInformation_GroupByEntry_DoNotUse, ::uint64_t, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>;
  GroupByInformation_GroupByEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GroupByInformation_GroupByEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GroupByInformation_GroupByEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GroupByInformation_GroupByEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GroupByInformation_GroupByEntry_DoNotUse*>(
        &_GroupByInformation_GroupByEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_transform_2eproto;
};
// -------------------------------------------------------------------

class FilterInformation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PicachvMessages.FilterInformation) */ {
 public:
  inline FilterInformation() : FilterInformation(nullptr) {}
  ~FilterInformation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FilterInformation(
      ::google::protobuf::internal::ConstantInitialized);

  inline FilterInformation(const FilterInformation& from) : FilterInformation(nullptr, from) {}
  inline FilterInformation(FilterInformation&& from) noexcept
      : FilterInformation(nullptr, std::move(from)) {}
  inline FilterInformation& operator=(const FilterInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline FilterInformation& operator=(FilterInformation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FilterInformation& default_instance() {
    return *internal_default_instance();
  }
  static inline const FilterInformation* internal_default_instance() {
    return reinterpret_cast<const FilterInformation*>(
        &_FilterInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(FilterInformation& a, FilterInformation& b) { a.Swap(&b); }
  inline void Swap(FilterInformation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FilterInformation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FilterInformation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<FilterInformation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FilterInformation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FilterInformation& from) { FilterInformation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FilterInformation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PicachvMessages.FilterInformation"; }

 protected:
  explicit FilterInformation(::google::protobuf::Arena* arena);
  FilterInformation(::google::protobuf::Arena* arena, const FilterInformation& from);
  FilterInformation(::google::protobuf::Arena* arena, FilterInformation&& from) noexcept
      : FilterInformation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilterFieldNumber = 2,
    kDfUuidFieldNumber = 1,
  };
  // repeated bool filter = 2;
  int filter_size() const;
  private:
  int _internal_filter_size() const;

  public:
  void clear_filter() ;
  bool filter(int index) const;
  void set_filter(int index, bool value);
  void add_filter(bool value);
  const ::google::protobuf::RepeatedField<bool>& filter() const;
  ::google::protobuf::RepeatedField<bool>* mutable_filter();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_filter() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_filter();

  public:
  // bytes df_uuid = 1;
  void clear_df_uuid() ;
  const std::string& df_uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_df_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_df_uuid();
  PROTOBUF_NODISCARD std::string* release_df_uuid();
  void set_allocated_df_uuid(std::string* value);

  private:
  const std::string& _internal_df_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_df_uuid(
      const std::string& value);
  std::string* _internal_mutable_df_uuid();

  public:
  // @@protoc_insertion_point(class_scope:PicachvMessages.FilterInformation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FilterInformation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FilterInformation& from_msg);
    ::google::protobuf::RepeatedField<bool> filter_;
    ::google::protobuf::internal::ArenaStringPtr df_uuid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transform_2eproto;
};
// -------------------------------------------------------------------

class JoinInformation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PicachvMessages.JoinInformation) */ {
 public:
  inline JoinInformation() : JoinInformation(nullptr) {}
  ~JoinInformation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JoinInformation(
      ::google::protobuf::internal::ConstantInitialized);

  inline JoinInformation(const JoinInformation& from) : JoinInformation(nullptr, from) {}
  inline JoinInformation(JoinInformation&& from) noexcept
      : JoinInformation(nullptr, std::move(from)) {}
  inline JoinInformation& operator=(const JoinInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoinInformation& operator=(JoinInformation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JoinInformation& default_instance() {
    return *internal_default_instance();
  }
  static inline const JoinInformation* internal_default_instance() {
    return reinterpret_cast<const JoinInformation*>(
        &_JoinInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(JoinInformation& a, JoinInformation& b) { a.Swap(&b); }
  inline void Swap(JoinInformation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoinInformation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JoinInformation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<JoinInformation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JoinInformation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JoinInformation& from) { JoinInformation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JoinInformation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PicachvMessages.JoinInformation"; }

 protected:
  explicit JoinInformation(::google::protobuf::Arena* arena);
  JoinInformation(::google::protobuf::Arena* arena, const JoinInformation& from);
  JoinInformation(::google::protobuf::Arena* arena, JoinInformation&& from) noexcept
      : JoinInformation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RowJoinInformation = JoinInformation_RowJoinInformation;
  using RenamingInformation = JoinInformation_RenamingInformation;

  // accessors -------------------------------------------------------
  enum : int {
    kLeftOnFieldNumber = 3,
    kRightOnFieldNumber = 4,
    kRowJoinInfoFieldNumber = 5,
    kLhsInputSchemaFieldNumber = 6,
    kRhsInputSchemaFieldNumber = 7,
    kRenamingFieldNumber = 8,
    kLhsDfUuidFieldNumber = 1,
    kRhsDfUuidFieldNumber = 2,
  };
  // repeated string left_on = 3;
  int left_on_size() const;
  private:
  int _internal_left_on_size() const;

  public:
  void clear_left_on() ;
  const std::string& left_on(int index) const;
  std::string* mutable_left_on(int index);
  void set_left_on(int index, const std::string& value);
  void set_left_on(int index, std::string&& value);
  void set_left_on(int index, const char* value);
  void set_left_on(int index, const char* value, std::size_t size);
  void set_left_on(int index, absl::string_view value);
  std::string* add_left_on();
  void add_left_on(const std::string& value);
  void add_left_on(std::string&& value);
  void add_left_on(const char* value);
  void add_left_on(const char* value, std::size_t size);
  void add_left_on(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& left_on() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_left_on();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_left_on() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_left_on();

  public:
  // repeated string right_on = 4;
  int right_on_size() const;
  private:
  int _internal_right_on_size() const;

  public:
  void clear_right_on() ;
  const std::string& right_on(int index) const;
  std::string* mutable_right_on(int index);
  void set_right_on(int index, const std::string& value);
  void set_right_on(int index, std::string&& value);
  void set_right_on(int index, const char* value);
  void set_right_on(int index, const char* value, std::size_t size);
  void set_right_on(int index, absl::string_view value);
  std::string* add_right_on();
  void add_right_on(const std::string& value);
  void add_right_on(std::string&& value);
  void add_right_on(const char* value);
  void add_right_on(const char* value, std::size_t size);
  void add_right_on(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& right_on() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_right_on();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_right_on() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_right_on();

  public:
  // repeated .PicachvMessages.JoinInformation.RowJoinInformation row_join_info = 5;
  int row_join_info_size() const;
  private:
  int _internal_row_join_info_size() const;

  public:
  void clear_row_join_info() ;
  ::PicachvMessages::JoinInformation_RowJoinInformation* mutable_row_join_info(int index);
  ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RowJoinInformation>* mutable_row_join_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RowJoinInformation>& _internal_row_join_info() const;
  ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RowJoinInformation>* _internal_mutable_row_join_info();
  public:
  const ::PicachvMessages::JoinInformation_RowJoinInformation& row_join_info(int index) const;
  ::PicachvMessages::JoinInformation_RowJoinInformation* add_row_join_info();
  const ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RowJoinInformation>& row_join_info() const;
  // repeated string lhs_input_schema = 6;
  int lhs_input_schema_size() const;
  private:
  int _internal_lhs_input_schema_size() const;

  public:
  void clear_lhs_input_schema() ;
  const std::string& lhs_input_schema(int index) const;
  std::string* mutable_lhs_input_schema(int index);
  void set_lhs_input_schema(int index, const std::string& value);
  void set_lhs_input_schema(int index, std::string&& value);
  void set_lhs_input_schema(int index, const char* value);
  void set_lhs_input_schema(int index, const char* value, std::size_t size);
  void set_lhs_input_schema(int index, absl::string_view value);
  std::string* add_lhs_input_schema();
  void add_lhs_input_schema(const std::string& value);
  void add_lhs_input_schema(std::string&& value);
  void add_lhs_input_schema(const char* value);
  void add_lhs_input_schema(const char* value, std::size_t size);
  void add_lhs_input_schema(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& lhs_input_schema() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_lhs_input_schema();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_lhs_input_schema() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_lhs_input_schema();

  public:
  // repeated string rhs_input_schema = 7;
  int rhs_input_schema_size() const;
  private:
  int _internal_rhs_input_schema_size() const;

  public:
  void clear_rhs_input_schema() ;
  const std::string& rhs_input_schema(int index) const;
  std::string* mutable_rhs_input_schema(int index);
  void set_rhs_input_schema(int index, const std::string& value);
  void set_rhs_input_schema(int index, std::string&& value);
  void set_rhs_input_schema(int index, const char* value);
  void set_rhs_input_schema(int index, const char* value, std::size_t size);
  void set_rhs_input_schema(int index, absl::string_view value);
  std::string* add_rhs_input_schema();
  void add_rhs_input_schema(const std::string& value);
  void add_rhs_input_schema(std::string&& value);
  void add_rhs_input_schema(const char* value);
  void add_rhs_input_schema(const char* value, std::size_t size);
  void add_rhs_input_schema(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& rhs_input_schema() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_rhs_input_schema();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_rhs_input_schema() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_rhs_input_schema();

  public:
  // repeated .PicachvMessages.JoinInformation.RenamingInformation renaming = 8;
  int renaming_size() const;
  private:
  int _internal_renaming_size() const;

  public:
  void clear_renaming() ;
  ::PicachvMessages::JoinInformation_RenamingInformation* mutable_renaming(int index);
  ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RenamingInformation>* mutable_renaming();

  private:
  const ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RenamingInformation>& _internal_renaming() const;
  ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RenamingInformation>* _internal_mutable_renaming();
  public:
  const ::PicachvMessages::JoinInformation_RenamingInformation& renaming(int index) const;
  ::PicachvMessages::JoinInformation_RenamingInformation* add_renaming();
  const ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RenamingInformation>& renaming() const;
  // bytes lhs_df_uuid = 1;
  void clear_lhs_df_uuid() ;
  const std::string& lhs_df_uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lhs_df_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_lhs_df_uuid();
  PROTOBUF_NODISCARD std::string* release_lhs_df_uuid();
  void set_allocated_lhs_df_uuid(std::string* value);

  private:
  const std::string& _internal_lhs_df_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lhs_df_uuid(
      const std::string& value);
  std::string* _internal_mutable_lhs_df_uuid();

  public:
  // bytes rhs_df_uuid = 2;
  void clear_rhs_df_uuid() ;
  const std::string& rhs_df_uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rhs_df_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_rhs_df_uuid();
  PROTOBUF_NODISCARD std::string* release_rhs_df_uuid();
  void set_allocated_rhs_df_uuid(std::string* value);

  private:
  const std::string& _internal_rhs_df_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rhs_df_uuid(
      const std::string& value);
  std::string* _internal_mutable_rhs_df_uuid();

  public:
  // @@protoc_insertion_point(class_scope:PicachvMessages.JoinInformation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 2,
      95, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_JoinInformation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JoinInformation& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> left_on_;
    ::google::protobuf::RepeatedPtrField<std::string> right_on_;
    ::google::protobuf::RepeatedPtrField< ::PicachvMessages::JoinInformation_RowJoinInformation > row_join_info_;
    ::google::protobuf::RepeatedPtrField<std::string> lhs_input_schema_;
    ::google::protobuf::RepeatedPtrField<std::string> rhs_input_schema_;
    ::google::protobuf::RepeatedPtrField< ::PicachvMessages::JoinInformation_RenamingInformation > renaming_;
    ::google::protobuf::internal::ArenaStringPtr lhs_df_uuid_;
    ::google::protobuf::internal::ArenaStringPtr rhs_df_uuid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transform_2eproto;
};
// -------------------------------------------------------------------

class GroupByInformation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PicachvMessages.GroupByInformation) */ {
 public:
  inline GroupByInformation() : GroupByInformation(nullptr) {}
  ~GroupByInformation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GroupByInformation(
      ::google::protobuf::internal::ConstantInitialized);

  inline GroupByInformation(const GroupByInformation& from) : GroupByInformation(nullptr, from) {}
  inline GroupByInformation(GroupByInformation&& from) noexcept
      : GroupByInformation(nullptr, std::move(from)) {}
  inline GroupByInformation& operator=(const GroupByInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline GroupByInformation& operator=(GroupByInformation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GroupByInformation& default_instance() {
    return *internal_default_instance();
  }
  static inline const GroupByInformation* internal_default_instance() {
    return reinterpret_cast<const GroupByInformation*>(
        &_GroupByInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GroupByInformation& a, GroupByInformation& b) { a.Swap(&b); }
  inline void Swap(GroupByInformation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GroupByInformation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GroupByInformation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GroupByInformation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GroupByInformation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GroupByInformation& from) { GroupByInformation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GroupByInformation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PicachvMessages.GroupByInformation"; }

 protected:
  explicit GroupByInformation(::google::protobuf::Arena* arena);
  GroupByInformation(::google::protobuf::Arena* arena, const GroupByInformation& from);
  GroupByInformation(::google::protobuf::Arena* arena, GroupByInformation&& from) noexcept
      : GroupByInformation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupByFieldNumber = 2,
    kDfUuidFieldNumber = 1,
  };
  // map<uint64, uint64> group_by = 2;
  int group_by_size() const;
  private:
  int _internal_group_by_size() const;

  public:
  void clear_group_by() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& group_by() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_group_by();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_group_by() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_group_by();

  public:
  // bytes df_uuid = 1;
  void clear_df_uuid() ;
  const std::string& df_uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_df_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_df_uuid();
  PROTOBUF_NODISCARD std::string* release_df_uuid();
  void set_allocated_df_uuid(std::string* value);

  private:
  const std::string& _internal_df_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_df_uuid(
      const std::string& value);
  std::string* _internal_mutable_df_uuid();

  public:
  // @@protoc_insertion_point(class_scope:PicachvMessages.GroupByInformation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GroupByInformation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GroupByInformation& from_msg);
    ::google::protobuf::internal::MapField<GroupByInformation_GroupByEntry_DoNotUse, ::uint64_t, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>
        group_by_;
    ::google::protobuf::internal::ArenaStringPtr df_uuid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transform_2eproto;
};
// -------------------------------------------------------------------

class TransformInfo_Information final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PicachvMessages.TransformInfo.Information) */ {
 public:
  inline TransformInfo_Information() : TransformInfo_Information(nullptr) {}
  ~TransformInfo_Information() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransformInfo_Information(
      ::google::protobuf::internal::ConstantInitialized);

  inline TransformInfo_Information(const TransformInfo_Information& from) : TransformInfo_Information(nullptr, from) {}
  inline TransformInfo_Information(TransformInfo_Information&& from) noexcept
      : TransformInfo_Information(nullptr, std::move(from)) {}
  inline TransformInfo_Information& operator=(const TransformInfo_Information& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransformInfo_Information& operator=(TransformInfo_Information&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransformInfo_Information& default_instance() {
    return *internal_default_instance();
  }
  enum InformationCase {
    kFilter = 1,
    kJoin = 2,
    kGroupBy = 3,
    kReorder = 4,
    kUnion = 5,
    INFORMATION_NOT_SET = 0,
  };
  static inline const TransformInfo_Information* internal_default_instance() {
    return reinterpret_cast<const TransformInfo_Information*>(
        &_TransformInfo_Information_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(TransformInfo_Information& a, TransformInfo_Information& b) { a.Swap(&b); }
  inline void Swap(TransformInfo_Information* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransformInfo_Information* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransformInfo_Information* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TransformInfo_Information>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransformInfo_Information& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransformInfo_Information& from) { TransformInfo_Information::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TransformInfo_Information* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PicachvMessages.TransformInfo.Information"; }

 protected:
  explicit TransformInfo_Information(::google::protobuf::Arena* arena);
  TransformInfo_Information(::google::protobuf::Arena* arena, const TransformInfo_Information& from);
  TransformInfo_Information(::google::protobuf::Arena* arena, TransformInfo_Information&& from) noexcept
      : TransformInfo_Information(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilterFieldNumber = 1,
    kJoinFieldNumber = 2,
    kGroupByFieldNumber = 3,
    kReorderFieldNumber = 4,
    kUnionFieldNumber = 5,
  };
  // .PicachvMessages.FilterInformation filter = 1;
  bool has_filter() const;
  private:
  bool _internal_has_filter() const;

  public:
  void clear_filter() ;
  const ::PicachvMessages::FilterInformation& filter() const;
  PROTOBUF_NODISCARD ::PicachvMessages::FilterInformation* release_filter();
  ::PicachvMessages::FilterInformation* mutable_filter();
  void set_allocated_filter(::PicachvMessages::FilterInformation* value);
  void unsafe_arena_set_allocated_filter(::PicachvMessages::FilterInformation* value);
  ::PicachvMessages::FilterInformation* unsafe_arena_release_filter();

  private:
  const ::PicachvMessages::FilterInformation& _internal_filter() const;
  ::PicachvMessages::FilterInformation* _internal_mutable_filter();

  public:
  // .PicachvMessages.JoinInformation join = 2;
  bool has_join() const;
  private:
  bool _internal_has_join() const;

  public:
  void clear_join() ;
  const ::PicachvMessages::JoinInformation& join() const;
  PROTOBUF_NODISCARD ::PicachvMessages::JoinInformation* release_join();
  ::PicachvMessages::JoinInformation* mutable_join();
  void set_allocated_join(::PicachvMessages::JoinInformation* value);
  void unsafe_arena_set_allocated_join(::PicachvMessages::JoinInformation* value);
  ::PicachvMessages::JoinInformation* unsafe_arena_release_join();

  private:
  const ::PicachvMessages::JoinInformation& _internal_join() const;
  ::PicachvMessages::JoinInformation* _internal_mutable_join();

  public:
  // .PicachvMessages.GroupByInformation group_by = 3;
  bool has_group_by() const;
  private:
  bool _internal_has_group_by() const;

  public:
  void clear_group_by() ;
  const ::PicachvMessages::GroupByInformation& group_by() const;
  PROTOBUF_NODISCARD ::PicachvMessages::GroupByInformation* release_group_by();
  ::PicachvMessages::GroupByInformation* mutable_group_by();
  void set_allocated_group_by(::PicachvMessages::GroupByInformation* value);
  void unsafe_arena_set_allocated_group_by(::PicachvMessages::GroupByInformation* value);
  ::PicachvMessages::GroupByInformation* unsafe_arena_release_group_by();

  private:
  const ::PicachvMessages::GroupByInformation& _internal_group_by() const;
  ::PicachvMessages::GroupByInformation* _internal_mutable_group_by();

  public:
  // .PicachvMessages.ReorderInformation reorder = 4;
  bool has_reorder() const;
  private:
  bool _internal_has_reorder() const;

  public:
  void clear_reorder() ;
  const ::PicachvMessages::ReorderInformation& reorder() const;
  PROTOBUF_NODISCARD ::PicachvMessages::ReorderInformation* release_reorder();
  ::PicachvMessages::ReorderInformation* mutable_reorder();
  void set_allocated_reorder(::PicachvMessages::ReorderInformation* value);
  void unsafe_arena_set_allocated_reorder(::PicachvMessages::ReorderInformation* value);
  ::PicachvMessages::ReorderInformation* unsafe_arena_release_reorder();

  private:
  const ::PicachvMessages::ReorderInformation& _internal_reorder() const;
  ::PicachvMessages::ReorderInformation* _internal_mutable_reorder();

  public:
  // .PicachvMessages.UnionInformation union = 5;
  bool has_union_() const;
  private:
  bool _internal_has_union_() const;

  public:
  void clear_union_() ;
  const ::PicachvMessages::UnionInformation& union_() const;
  PROTOBUF_NODISCARD ::PicachvMessages::UnionInformation* release_union_();
  ::PicachvMessages::UnionInformation* mutable_union_();
  void set_allocated_union_(::PicachvMessages::UnionInformation* value);
  void unsafe_arena_set_allocated_union_(::PicachvMessages::UnionInformation* value);
  ::PicachvMessages::UnionInformation* unsafe_arena_release_union_();

  private:
  const ::PicachvMessages::UnionInformation& _internal_union_() const;
  ::PicachvMessages::UnionInformation* _internal_mutable_union_();

  public:
  void clear_information();
  InformationCase information_case() const;
  // @@protoc_insertion_point(class_scope:PicachvMessages.TransformInfo.Information)
 private:
  class _Internal;
  void set_has_filter();
  void set_has_join();
  void set_has_group_by();
  void set_has_reorder();
  void set_has_union_();
  inline bool has_information() const;
  inline void clear_has_information();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 5, 5,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TransformInfo_Information_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TransformInfo_Information& from_msg);
    union InformationUnion {
      constexpr InformationUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::PicachvMessages::FilterInformation* filter_;
      ::PicachvMessages::JoinInformation* join_;
      ::PicachvMessages::GroupByInformation* group_by_;
      ::PicachvMessages::ReorderInformation* reorder_;
      ::PicachvMessages::UnionInformation* union__;
    } information_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transform_2eproto;
};
// -------------------------------------------------------------------

class TransformInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PicachvMessages.TransformInfo) */ {
 public:
  inline TransformInfo() : TransformInfo(nullptr) {}
  ~TransformInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransformInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline TransformInfo(const TransformInfo& from) : TransformInfo(nullptr, from) {}
  inline TransformInfo(TransformInfo&& from) noexcept
      : TransformInfo(nullptr, std::move(from)) {}
  inline TransformInfo& operator=(const TransformInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransformInfo& operator=(TransformInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransformInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransformInfo* internal_default_instance() {
    return reinterpret_cast<const TransformInfo*>(
        &_TransformInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(TransformInfo& a, TransformInfo& b) { a.Swap(&b); }
  inline void Swap(TransformInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransformInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransformInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TransformInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransformInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransformInfo& from) { TransformInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TransformInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PicachvMessages.TransformInfo"; }

 protected:
  explicit TransformInfo(::google::protobuf::Arena* arena);
  TransformInfo(::google::protobuf::Arena* arena, const TransformInfo& from);
  TransformInfo(::google::protobuf::Arena* arena, TransformInfo&& from) noexcept
      : TransformInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Information = TransformInfo_Information;

  // accessors -------------------------------------------------------
  enum : int {
    kTransInfoFieldNumber = 1,
  };
  // repeated .PicachvMessages.TransformInfo.Information trans_info = 1;
  int trans_info_size() const;
  private:
  int _internal_trans_info_size() const;

  public:
  void clear_trans_info() ;
  ::PicachvMessages::TransformInfo_Information* mutable_trans_info(int index);
  ::google::protobuf::RepeatedPtrField<::PicachvMessages::TransformInfo_Information>* mutable_trans_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::PicachvMessages::TransformInfo_Information>& _internal_trans_info() const;
  ::google::protobuf::RepeatedPtrField<::PicachvMessages::TransformInfo_Information>* _internal_mutable_trans_info();
  public:
  const ::PicachvMessages::TransformInfo_Information& trans_info(int index) const;
  ::PicachvMessages::TransformInfo_Information* add_trans_info();
  const ::google::protobuf::RepeatedPtrField<::PicachvMessages::TransformInfo_Information>& trans_info() const;
  // @@protoc_insertion_point(class_scope:PicachvMessages.TransformInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TransformInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TransformInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::PicachvMessages::TransformInfo_Information > trans_info_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transform_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FilterInformation

// bytes df_uuid = 1;
inline void FilterInformation::clear_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.ClearToEmpty();
}
inline const std::string& FilterInformation::df_uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.FilterInformation.df_uuid)
  return _internal_df_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FilterInformation::set_df_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PicachvMessages.FilterInformation.df_uuid)
}
inline std::string* FilterInformation::mutable_df_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_df_uuid();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.FilterInformation.df_uuid)
  return _s;
}
inline const std::string& FilterInformation::_internal_df_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.df_uuid_.Get();
}
inline void FilterInformation::_internal_set_df_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.Set(value, GetArena());
}
inline std::string* FilterInformation::_internal_mutable_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.df_uuid_.Mutable( GetArena());
}
inline std::string* FilterInformation::release_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PicachvMessages.FilterInformation.df_uuid)
  return _impl_.df_uuid_.Release();
}
inline void FilterInformation::set_allocated_df_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.df_uuid_.IsDefault()) {
          _impl_.df_uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PicachvMessages.FilterInformation.df_uuid)
}

// repeated bool filter = 2;
inline int FilterInformation::_internal_filter_size() const {
  return _internal_filter().size();
}
inline int FilterInformation::filter_size() const {
  return _internal_filter_size();
}
inline void FilterInformation::clear_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filter_.Clear();
}
inline bool FilterInformation::filter(int index) const {
  // @@protoc_insertion_point(field_get:PicachvMessages.FilterInformation.filter)
  return _internal_filter().Get(index);
}
inline void FilterInformation::set_filter(int index, bool value) {
  _internal_mutable_filter()->Set(index, value);
  // @@protoc_insertion_point(field_set:PicachvMessages.FilterInformation.filter)
}
inline void FilterInformation::add_filter(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_filter()->Add(value);
  // @@protoc_insertion_point(field_add:PicachvMessages.FilterInformation.filter)
}
inline const ::google::protobuf::RepeatedField<bool>& FilterInformation::filter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PicachvMessages.FilterInformation.filter)
  return _internal_filter();
}
inline ::google::protobuf::RepeatedField<bool>* FilterInformation::mutable_filter()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PicachvMessages.FilterInformation.filter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_filter();
}
inline const ::google::protobuf::RepeatedField<bool>&
FilterInformation::_internal_filter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filter_;
}
inline ::google::protobuf::RepeatedField<bool>* FilterInformation::_internal_mutable_filter() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.filter_;
}

// -------------------------------------------------------------------

// JoinInformation_RowJoinInformation

// uint64 left_row = 1;
inline void JoinInformation_RowJoinInformation::clear_left_row() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.left_row_ = ::uint64_t{0u};
}
inline ::uint64_t JoinInformation_RowJoinInformation::left_row() const {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.RowJoinInformation.left_row)
  return _internal_left_row();
}
inline void JoinInformation_RowJoinInformation::set_left_row(::uint64_t value) {
  _internal_set_left_row(value);
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.RowJoinInformation.left_row)
}
inline ::uint64_t JoinInformation_RowJoinInformation::_internal_left_row() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.left_row_;
}
inline void JoinInformation_RowJoinInformation::_internal_set_left_row(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.left_row_ = value;
}

// uint64 right_row = 2;
inline void JoinInformation_RowJoinInformation::clear_right_row() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.right_row_ = ::uint64_t{0u};
}
inline ::uint64_t JoinInformation_RowJoinInformation::right_row() const {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.RowJoinInformation.right_row)
  return _internal_right_row();
}
inline void JoinInformation_RowJoinInformation::set_right_row(::uint64_t value) {
  _internal_set_right_row(value);
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.RowJoinInformation.right_row)
}
inline ::uint64_t JoinInformation_RowJoinInformation::_internal_right_row() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.right_row_;
}
inline void JoinInformation_RowJoinInformation::_internal_set_right_row(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.right_row_ = value;
}

// -------------------------------------------------------------------

// JoinInformation_RenamingInformation

// string old_name = 1;
inline void JoinInformation_RenamingInformation::clear_old_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.old_name_.ClearToEmpty();
}
inline const std::string& JoinInformation_RenamingInformation::old_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.RenamingInformation.old_name)
  return _internal_old_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JoinInformation_RenamingInformation::set_old_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.old_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.RenamingInformation.old_name)
}
inline std::string* JoinInformation_RenamingInformation::mutable_old_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_old_name();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.RenamingInformation.old_name)
  return _s;
}
inline const std::string& JoinInformation_RenamingInformation::_internal_old_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.old_name_.Get();
}
inline void JoinInformation_RenamingInformation::_internal_set_old_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.old_name_.Set(value, GetArena());
}
inline std::string* JoinInformation_RenamingInformation::_internal_mutable_old_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.old_name_.Mutable( GetArena());
}
inline std::string* JoinInformation_RenamingInformation::release_old_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PicachvMessages.JoinInformation.RenamingInformation.old_name)
  return _impl_.old_name_.Release();
}
inline void JoinInformation_RenamingInformation::set_allocated_old_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.old_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.old_name_.IsDefault()) {
          _impl_.old_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PicachvMessages.JoinInformation.RenamingInformation.old_name)
}

// string new_name = 2;
inline void JoinInformation_RenamingInformation::clear_new_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.ClearToEmpty();
}
inline const std::string& JoinInformation_RenamingInformation::new_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.RenamingInformation.new_name)
  return _internal_new_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JoinInformation_RenamingInformation::set_new_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.RenamingInformation.new_name)
}
inline std::string* JoinInformation_RenamingInformation::mutable_new_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_name();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.RenamingInformation.new_name)
  return _s;
}
inline const std::string& JoinInformation_RenamingInformation::_internal_new_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_name_.Get();
}
inline void JoinInformation_RenamingInformation::_internal_set_new_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.Set(value, GetArena());
}
inline std::string* JoinInformation_RenamingInformation::_internal_mutable_new_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_name_.Mutable( GetArena());
}
inline std::string* JoinInformation_RenamingInformation::release_new_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PicachvMessages.JoinInformation.RenamingInformation.new_name)
  return _impl_.new_name_.Release();
}
inline void JoinInformation_RenamingInformation::set_allocated_new_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.new_name_.IsDefault()) {
          _impl_.new_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PicachvMessages.JoinInformation.RenamingInformation.new_name)
}

// -------------------------------------------------------------------

// JoinInformation

// bytes lhs_df_uuid = 1;
inline void JoinInformation::clear_lhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_df_uuid_.ClearToEmpty();
}
inline const std::string& JoinInformation::lhs_df_uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.lhs_df_uuid)
  return _internal_lhs_df_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JoinInformation::set_lhs_df_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_df_uuid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.lhs_df_uuid)
}
inline std::string* JoinInformation::mutable_lhs_df_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lhs_df_uuid();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.lhs_df_uuid)
  return _s;
}
inline const std::string& JoinInformation::_internal_lhs_df_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lhs_df_uuid_.Get();
}
inline void JoinInformation::_internal_set_lhs_df_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_df_uuid_.Set(value, GetArena());
}
inline std::string* JoinInformation::_internal_mutable_lhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lhs_df_uuid_.Mutable( GetArena());
}
inline std::string* JoinInformation::release_lhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PicachvMessages.JoinInformation.lhs_df_uuid)
  return _impl_.lhs_df_uuid_.Release();
}
inline void JoinInformation::set_allocated_lhs_df_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_df_uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lhs_df_uuid_.IsDefault()) {
          _impl_.lhs_df_uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PicachvMessages.JoinInformation.lhs_df_uuid)
}

// bytes rhs_df_uuid = 2;
inline void JoinInformation::clear_rhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_df_uuid_.ClearToEmpty();
}
inline const std::string& JoinInformation::rhs_df_uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.rhs_df_uuid)
  return _internal_rhs_df_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JoinInformation::set_rhs_df_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_df_uuid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.rhs_df_uuid)
}
inline std::string* JoinInformation::mutable_rhs_df_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rhs_df_uuid();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.rhs_df_uuid)
  return _s;
}
inline const std::string& JoinInformation::_internal_rhs_df_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rhs_df_uuid_.Get();
}
inline void JoinInformation::_internal_set_rhs_df_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_df_uuid_.Set(value, GetArena());
}
inline std::string* JoinInformation::_internal_mutable_rhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rhs_df_uuid_.Mutable( GetArena());
}
inline std::string* JoinInformation::release_rhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PicachvMessages.JoinInformation.rhs_df_uuid)
  return _impl_.rhs_df_uuid_.Release();
}
inline void JoinInformation::set_allocated_rhs_df_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_df_uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rhs_df_uuid_.IsDefault()) {
          _impl_.rhs_df_uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PicachvMessages.JoinInformation.rhs_df_uuid)
}

// repeated string left_on = 3;
inline int JoinInformation::_internal_left_on_size() const {
  return _internal_left_on().size();
}
inline int JoinInformation::left_on_size() const {
  return _internal_left_on_size();
}
inline void JoinInformation::clear_left_on() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.left_on_.Clear();
}
inline std::string* JoinInformation::add_left_on()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_left_on()->Add();
  // @@protoc_insertion_point(field_add_mutable:PicachvMessages.JoinInformation.left_on)
  return _s;
}
inline const std::string& JoinInformation::left_on(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.left_on)
  return _internal_left_on().Get(index);
}
inline std::string* JoinInformation::mutable_left_on(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.left_on)
  return _internal_mutable_left_on()->Mutable(index);
}
inline void JoinInformation::set_left_on(int index, const std::string& value) {
  _internal_mutable_left_on()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.left_on)
}
inline void JoinInformation::set_left_on(int index, std::string&& value) {
  _internal_mutable_left_on()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.left_on)
}
inline void JoinInformation::set_left_on(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_left_on()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PicachvMessages.JoinInformation.left_on)
}
inline void JoinInformation::set_left_on(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_left_on()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PicachvMessages.JoinInformation.left_on)
}
inline void JoinInformation::set_left_on(int index, absl::string_view value) {
  _internal_mutable_left_on()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:PicachvMessages.JoinInformation.left_on)
}
inline void JoinInformation::add_left_on(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_left_on()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.left_on)
}
inline void JoinInformation::add_left_on(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_left_on()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.left_on)
}
inline void JoinInformation::add_left_on(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_left_on()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PicachvMessages.JoinInformation.left_on)
}
inline void JoinInformation::add_left_on(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_left_on()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PicachvMessages.JoinInformation.left_on)
}
inline void JoinInformation::add_left_on(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_left_on()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:PicachvMessages.JoinInformation.left_on)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JoinInformation::left_on() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PicachvMessages.JoinInformation.left_on)
  return _internal_left_on();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JoinInformation::mutable_left_on() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PicachvMessages.JoinInformation.left_on)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_left_on();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JoinInformation::_internal_left_on() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.left_on_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JoinInformation::_internal_mutable_left_on() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.left_on_;
}

// repeated string right_on = 4;
inline int JoinInformation::_internal_right_on_size() const {
  return _internal_right_on().size();
}
inline int JoinInformation::right_on_size() const {
  return _internal_right_on_size();
}
inline void JoinInformation::clear_right_on() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.right_on_.Clear();
}
inline std::string* JoinInformation::add_right_on()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_right_on()->Add();
  // @@protoc_insertion_point(field_add_mutable:PicachvMessages.JoinInformation.right_on)
  return _s;
}
inline const std::string& JoinInformation::right_on(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.right_on)
  return _internal_right_on().Get(index);
}
inline std::string* JoinInformation::mutable_right_on(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.right_on)
  return _internal_mutable_right_on()->Mutable(index);
}
inline void JoinInformation::set_right_on(int index, const std::string& value) {
  _internal_mutable_right_on()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.right_on)
}
inline void JoinInformation::set_right_on(int index, std::string&& value) {
  _internal_mutable_right_on()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.right_on)
}
inline void JoinInformation::set_right_on(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_right_on()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PicachvMessages.JoinInformation.right_on)
}
inline void JoinInformation::set_right_on(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_right_on()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PicachvMessages.JoinInformation.right_on)
}
inline void JoinInformation::set_right_on(int index, absl::string_view value) {
  _internal_mutable_right_on()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:PicachvMessages.JoinInformation.right_on)
}
inline void JoinInformation::add_right_on(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_right_on()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.right_on)
}
inline void JoinInformation::add_right_on(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_right_on()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.right_on)
}
inline void JoinInformation::add_right_on(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_right_on()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PicachvMessages.JoinInformation.right_on)
}
inline void JoinInformation::add_right_on(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_right_on()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PicachvMessages.JoinInformation.right_on)
}
inline void JoinInformation::add_right_on(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_right_on()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:PicachvMessages.JoinInformation.right_on)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JoinInformation::right_on() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PicachvMessages.JoinInformation.right_on)
  return _internal_right_on();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JoinInformation::mutable_right_on() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PicachvMessages.JoinInformation.right_on)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_right_on();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JoinInformation::_internal_right_on() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.right_on_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JoinInformation::_internal_mutable_right_on() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.right_on_;
}

// repeated .PicachvMessages.JoinInformation.RowJoinInformation row_join_info = 5;
inline int JoinInformation::_internal_row_join_info_size() const {
  return _internal_row_join_info().size();
}
inline int JoinInformation::row_join_info_size() const {
  return _internal_row_join_info_size();
}
inline void JoinInformation::clear_row_join_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_join_info_.Clear();
}
inline ::PicachvMessages::JoinInformation_RowJoinInformation* JoinInformation::mutable_row_join_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.row_join_info)
  return _internal_mutable_row_join_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RowJoinInformation>* JoinInformation::mutable_row_join_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PicachvMessages.JoinInformation.row_join_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_row_join_info();
}
inline const ::PicachvMessages::JoinInformation_RowJoinInformation& JoinInformation::row_join_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.row_join_info)
  return _internal_row_join_info().Get(index);
}
inline ::PicachvMessages::JoinInformation_RowJoinInformation* JoinInformation::add_row_join_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::PicachvMessages::JoinInformation_RowJoinInformation* _add = _internal_mutable_row_join_info()->Add();
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.row_join_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RowJoinInformation>& JoinInformation::row_join_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PicachvMessages.JoinInformation.row_join_info)
  return _internal_row_join_info();
}
inline const ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RowJoinInformation>&
JoinInformation::_internal_row_join_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.row_join_info_;
}
inline ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RowJoinInformation>*
JoinInformation::_internal_mutable_row_join_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.row_join_info_;
}

// repeated string lhs_input_schema = 6;
inline int JoinInformation::_internal_lhs_input_schema_size() const {
  return _internal_lhs_input_schema().size();
}
inline int JoinInformation::lhs_input_schema_size() const {
  return _internal_lhs_input_schema_size();
}
inline void JoinInformation::clear_lhs_input_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_input_schema_.Clear();
}
inline std::string* JoinInformation::add_lhs_input_schema()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_lhs_input_schema()->Add();
  // @@protoc_insertion_point(field_add_mutable:PicachvMessages.JoinInformation.lhs_input_schema)
  return _s;
}
inline const std::string& JoinInformation::lhs_input_schema(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.lhs_input_schema)
  return _internal_lhs_input_schema().Get(index);
}
inline std::string* JoinInformation::mutable_lhs_input_schema(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.lhs_input_schema)
  return _internal_mutable_lhs_input_schema()->Mutable(index);
}
inline void JoinInformation::set_lhs_input_schema(int index, const std::string& value) {
  _internal_mutable_lhs_input_schema()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline void JoinInformation::set_lhs_input_schema(int index, std::string&& value) {
  _internal_mutable_lhs_input_schema()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline void JoinInformation::set_lhs_input_schema(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_lhs_input_schema()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline void JoinInformation::set_lhs_input_schema(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_lhs_input_schema()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline void JoinInformation::set_lhs_input_schema(int index, absl::string_view value) {
  _internal_mutable_lhs_input_schema()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline void JoinInformation::add_lhs_input_schema(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_lhs_input_schema()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline void JoinInformation::add_lhs_input_schema(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_lhs_input_schema()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline void JoinInformation::add_lhs_input_schema(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_lhs_input_schema()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline void JoinInformation::add_lhs_input_schema(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_lhs_input_schema()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline void JoinInformation::add_lhs_input_schema(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_lhs_input_schema()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:PicachvMessages.JoinInformation.lhs_input_schema)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JoinInformation::lhs_input_schema() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PicachvMessages.JoinInformation.lhs_input_schema)
  return _internal_lhs_input_schema();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JoinInformation::mutable_lhs_input_schema() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PicachvMessages.JoinInformation.lhs_input_schema)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_lhs_input_schema();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JoinInformation::_internal_lhs_input_schema() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lhs_input_schema_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JoinInformation::_internal_mutable_lhs_input_schema() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.lhs_input_schema_;
}

// repeated string rhs_input_schema = 7;
inline int JoinInformation::_internal_rhs_input_schema_size() const {
  return _internal_rhs_input_schema().size();
}
inline int JoinInformation::rhs_input_schema_size() const {
  return _internal_rhs_input_schema_size();
}
inline void JoinInformation::clear_rhs_input_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_input_schema_.Clear();
}
inline std::string* JoinInformation::add_rhs_input_schema()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_rhs_input_schema()->Add();
  // @@protoc_insertion_point(field_add_mutable:PicachvMessages.JoinInformation.rhs_input_schema)
  return _s;
}
inline const std::string& JoinInformation::rhs_input_schema(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.rhs_input_schema)
  return _internal_rhs_input_schema().Get(index);
}
inline std::string* JoinInformation::mutable_rhs_input_schema(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.rhs_input_schema)
  return _internal_mutable_rhs_input_schema()->Mutable(index);
}
inline void JoinInformation::set_rhs_input_schema(int index, const std::string& value) {
  _internal_mutable_rhs_input_schema()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline void JoinInformation::set_rhs_input_schema(int index, std::string&& value) {
  _internal_mutable_rhs_input_schema()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline void JoinInformation::set_rhs_input_schema(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_rhs_input_schema()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline void JoinInformation::set_rhs_input_schema(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_rhs_input_schema()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline void JoinInformation::set_rhs_input_schema(int index, absl::string_view value) {
  _internal_mutable_rhs_input_schema()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline void JoinInformation::add_rhs_input_schema(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rhs_input_schema()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline void JoinInformation::add_rhs_input_schema(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rhs_input_schema()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline void JoinInformation::add_rhs_input_schema(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rhs_input_schema()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline void JoinInformation::add_rhs_input_schema(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rhs_input_schema()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline void JoinInformation::add_rhs_input_schema(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rhs_input_schema()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:PicachvMessages.JoinInformation.rhs_input_schema)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JoinInformation::rhs_input_schema() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PicachvMessages.JoinInformation.rhs_input_schema)
  return _internal_rhs_input_schema();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JoinInformation::mutable_rhs_input_schema() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PicachvMessages.JoinInformation.rhs_input_schema)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rhs_input_schema();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JoinInformation::_internal_rhs_input_schema() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rhs_input_schema_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JoinInformation::_internal_mutable_rhs_input_schema() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rhs_input_schema_;
}

// repeated .PicachvMessages.JoinInformation.RenamingInformation renaming = 8;
inline int JoinInformation::_internal_renaming_size() const {
  return _internal_renaming().size();
}
inline int JoinInformation::renaming_size() const {
  return _internal_renaming_size();
}
inline void JoinInformation::clear_renaming() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.renaming_.Clear();
}
inline ::PicachvMessages::JoinInformation_RenamingInformation* JoinInformation::mutable_renaming(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:PicachvMessages.JoinInformation.renaming)
  return _internal_mutable_renaming()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RenamingInformation>* JoinInformation::mutable_renaming()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PicachvMessages.JoinInformation.renaming)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_renaming();
}
inline const ::PicachvMessages::JoinInformation_RenamingInformation& JoinInformation::renaming(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.JoinInformation.renaming)
  return _internal_renaming().Get(index);
}
inline ::PicachvMessages::JoinInformation_RenamingInformation* JoinInformation::add_renaming() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::PicachvMessages::JoinInformation_RenamingInformation* _add = _internal_mutable_renaming()->Add();
  // @@protoc_insertion_point(field_add:PicachvMessages.JoinInformation.renaming)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RenamingInformation>& JoinInformation::renaming() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PicachvMessages.JoinInformation.renaming)
  return _internal_renaming();
}
inline const ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RenamingInformation>&
JoinInformation::_internal_renaming() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.renaming_;
}
inline ::google::protobuf::RepeatedPtrField<::PicachvMessages::JoinInformation_RenamingInformation>*
JoinInformation::_internal_mutable_renaming() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.renaming_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GroupByInformation

// bytes df_uuid = 1;
inline void GroupByInformation::clear_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.ClearToEmpty();
}
inline const std::string& GroupByInformation::df_uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.GroupByInformation.df_uuid)
  return _internal_df_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GroupByInformation::set_df_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PicachvMessages.GroupByInformation.df_uuid)
}
inline std::string* GroupByInformation::mutable_df_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_df_uuid();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.GroupByInformation.df_uuid)
  return _s;
}
inline const std::string& GroupByInformation::_internal_df_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.df_uuid_.Get();
}
inline void GroupByInformation::_internal_set_df_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.Set(value, GetArena());
}
inline std::string* GroupByInformation::_internal_mutable_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.df_uuid_.Mutable( GetArena());
}
inline std::string* GroupByInformation::release_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PicachvMessages.GroupByInformation.df_uuid)
  return _impl_.df_uuid_.Release();
}
inline void GroupByInformation::set_allocated_df_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.df_uuid_.IsDefault()) {
          _impl_.df_uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PicachvMessages.GroupByInformation.df_uuid)
}

// map<uint64, uint64> group_by = 2;
inline int GroupByInformation::_internal_group_by_size() const {
  return _internal_group_by().size();
}
inline int GroupByInformation::group_by_size() const {
  return _internal_group_by_size();
}
inline void GroupByInformation::clear_group_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_by_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& GroupByInformation::_internal_group_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_by_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& GroupByInformation::group_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:PicachvMessages.GroupByInformation.group_by)
  return _internal_group_by();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* GroupByInformation::_internal_mutable_group_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_by_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* GroupByInformation::mutable_group_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:PicachvMessages.GroupByInformation.group_by)
  return _internal_mutable_group_by();
}

// -------------------------------------------------------------------

// UnionInformation

// bytes lhs_df_uuid = 1;
inline void UnionInformation::clear_lhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_df_uuid_.ClearToEmpty();
}
inline const std::string& UnionInformation::lhs_df_uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.UnionInformation.lhs_df_uuid)
  return _internal_lhs_df_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnionInformation::set_lhs_df_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_df_uuid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PicachvMessages.UnionInformation.lhs_df_uuid)
}
inline std::string* UnionInformation::mutable_lhs_df_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lhs_df_uuid();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.UnionInformation.lhs_df_uuid)
  return _s;
}
inline const std::string& UnionInformation::_internal_lhs_df_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lhs_df_uuid_.Get();
}
inline void UnionInformation::_internal_set_lhs_df_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_df_uuid_.Set(value, GetArena());
}
inline std::string* UnionInformation::_internal_mutable_lhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lhs_df_uuid_.Mutable( GetArena());
}
inline std::string* UnionInformation::release_lhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PicachvMessages.UnionInformation.lhs_df_uuid)
  return _impl_.lhs_df_uuid_.Release();
}
inline void UnionInformation::set_allocated_lhs_df_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lhs_df_uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lhs_df_uuid_.IsDefault()) {
          _impl_.lhs_df_uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PicachvMessages.UnionInformation.lhs_df_uuid)
}

// bytes rhs_df_uuid = 2;
inline void UnionInformation::clear_rhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_df_uuid_.ClearToEmpty();
}
inline const std::string& UnionInformation::rhs_df_uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.UnionInformation.rhs_df_uuid)
  return _internal_rhs_df_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnionInformation::set_rhs_df_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_df_uuid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PicachvMessages.UnionInformation.rhs_df_uuid)
}
inline std::string* UnionInformation::mutable_rhs_df_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rhs_df_uuid();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.UnionInformation.rhs_df_uuid)
  return _s;
}
inline const std::string& UnionInformation::_internal_rhs_df_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rhs_df_uuid_.Get();
}
inline void UnionInformation::_internal_set_rhs_df_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_df_uuid_.Set(value, GetArena());
}
inline std::string* UnionInformation::_internal_mutable_rhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rhs_df_uuid_.Mutable( GetArena());
}
inline std::string* UnionInformation::release_rhs_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PicachvMessages.UnionInformation.rhs_df_uuid)
  return _impl_.rhs_df_uuid_.Release();
}
inline void UnionInformation::set_allocated_rhs_df_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rhs_df_uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rhs_df_uuid_.IsDefault()) {
          _impl_.rhs_df_uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PicachvMessages.UnionInformation.rhs_df_uuid)
}

// -------------------------------------------------------------------

// ReorderInformation

// bytes df_uuid = 1;
inline void ReorderInformation::clear_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.ClearToEmpty();
}
inline const std::string& ReorderInformation::df_uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.ReorderInformation.df_uuid)
  return _internal_df_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReorderInformation::set_df_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PicachvMessages.ReorderInformation.df_uuid)
}
inline std::string* ReorderInformation::mutable_df_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_df_uuid();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.ReorderInformation.df_uuid)
  return _s;
}
inline const std::string& ReorderInformation::_internal_df_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.df_uuid_.Get();
}
inline void ReorderInformation::_internal_set_df_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.Set(value, GetArena());
}
inline std::string* ReorderInformation::_internal_mutable_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.df_uuid_.Mutable( GetArena());
}
inline std::string* ReorderInformation::release_df_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PicachvMessages.ReorderInformation.df_uuid)
  return _impl_.df_uuid_.Release();
}
inline void ReorderInformation::set_allocated_df_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.df_uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.df_uuid_.IsDefault()) {
          _impl_.df_uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PicachvMessages.ReorderInformation.df_uuid)
}

// repeated uint64 perm = 2;
inline int ReorderInformation::_internal_perm_size() const {
  return _internal_perm().size();
}
inline int ReorderInformation::perm_size() const {
  return _internal_perm_size();
}
inline void ReorderInformation::clear_perm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perm_.Clear();
}
inline ::uint64_t ReorderInformation::perm(int index) const {
  // @@protoc_insertion_point(field_get:PicachvMessages.ReorderInformation.perm)
  return _internal_perm().Get(index);
}
inline void ReorderInformation::set_perm(int index, ::uint64_t value) {
  _internal_mutable_perm()->Set(index, value);
  // @@protoc_insertion_point(field_set:PicachvMessages.ReorderInformation.perm)
}
inline void ReorderInformation::add_perm(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_perm()->Add(value);
  // @@protoc_insertion_point(field_add:PicachvMessages.ReorderInformation.perm)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& ReorderInformation::perm() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PicachvMessages.ReorderInformation.perm)
  return _internal_perm();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ReorderInformation::mutable_perm()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PicachvMessages.ReorderInformation.perm)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_perm();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
ReorderInformation::_internal_perm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perm_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ReorderInformation::_internal_mutable_perm() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.perm_;
}

// -------------------------------------------------------------------

// TransformInfo_Information

// .PicachvMessages.FilterInformation filter = 1;
inline bool TransformInfo_Information::has_filter() const {
  return information_case() == kFilter;
}
inline bool TransformInfo_Information::_internal_has_filter() const {
  return information_case() == kFilter;
}
inline void TransformInfo_Information::set_has_filter() {
  _impl_._oneof_case_[0] = kFilter;
}
inline void TransformInfo_Information::clear_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (information_case() == kFilter) {
    if (GetArena() == nullptr) {
      delete _impl_.information_.filter_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.information_.filter_);
    }
    clear_has_information();
  }
}
inline ::PicachvMessages::FilterInformation* TransformInfo_Information::release_filter() {
  // @@protoc_insertion_point(field_release:PicachvMessages.TransformInfo.Information.filter)
  if (information_case() == kFilter) {
    clear_has_information();
    auto* temp = _impl_.information_.filter_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.information_.filter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PicachvMessages::FilterInformation& TransformInfo_Information::_internal_filter() const {
  return information_case() == kFilter ? *_impl_.information_.filter_ : reinterpret_cast<::PicachvMessages::FilterInformation&>(::PicachvMessages::_FilterInformation_default_instance_);
}
inline const ::PicachvMessages::FilterInformation& TransformInfo_Information::filter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.TransformInfo.Information.filter)
  return _internal_filter();
}
inline ::PicachvMessages::FilterInformation* TransformInfo_Information::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PicachvMessages.TransformInfo.Information.filter)
  if (information_case() == kFilter) {
    clear_has_information();
    auto* temp = _impl_.information_.filter_;
    _impl_.information_.filter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TransformInfo_Information::unsafe_arena_set_allocated_filter(::PicachvMessages::FilterInformation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_information();
  if (value) {
    set_has_filter();
    _impl_.information_.filter_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PicachvMessages.TransformInfo.Information.filter)
}
inline ::PicachvMessages::FilterInformation* TransformInfo_Information::_internal_mutable_filter() {
  if (information_case() != kFilter) {
    clear_information();
    set_has_filter();
    _impl_.information_.filter_ =
        ::google::protobuf::Message::DefaultConstruct<::PicachvMessages::FilterInformation>(GetArena());
  }
  return _impl_.information_.filter_;
}
inline ::PicachvMessages::FilterInformation* TransformInfo_Information::mutable_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PicachvMessages::FilterInformation* _msg = _internal_mutable_filter();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.TransformInfo.Information.filter)
  return _msg;
}

// .PicachvMessages.JoinInformation join = 2;
inline bool TransformInfo_Information::has_join() const {
  return information_case() == kJoin;
}
inline bool TransformInfo_Information::_internal_has_join() const {
  return information_case() == kJoin;
}
inline void TransformInfo_Information::set_has_join() {
  _impl_._oneof_case_[0] = kJoin;
}
inline void TransformInfo_Information::clear_join() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (information_case() == kJoin) {
    if (GetArena() == nullptr) {
      delete _impl_.information_.join_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.information_.join_);
    }
    clear_has_information();
  }
}
inline ::PicachvMessages::JoinInformation* TransformInfo_Information::release_join() {
  // @@protoc_insertion_point(field_release:PicachvMessages.TransformInfo.Information.join)
  if (information_case() == kJoin) {
    clear_has_information();
    auto* temp = _impl_.information_.join_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.information_.join_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PicachvMessages::JoinInformation& TransformInfo_Information::_internal_join() const {
  return information_case() == kJoin ? *_impl_.information_.join_ : reinterpret_cast<::PicachvMessages::JoinInformation&>(::PicachvMessages::_JoinInformation_default_instance_);
}
inline const ::PicachvMessages::JoinInformation& TransformInfo_Information::join() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.TransformInfo.Information.join)
  return _internal_join();
}
inline ::PicachvMessages::JoinInformation* TransformInfo_Information::unsafe_arena_release_join() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PicachvMessages.TransformInfo.Information.join)
  if (information_case() == kJoin) {
    clear_has_information();
    auto* temp = _impl_.information_.join_;
    _impl_.information_.join_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TransformInfo_Information::unsafe_arena_set_allocated_join(::PicachvMessages::JoinInformation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_information();
  if (value) {
    set_has_join();
    _impl_.information_.join_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PicachvMessages.TransformInfo.Information.join)
}
inline ::PicachvMessages::JoinInformation* TransformInfo_Information::_internal_mutable_join() {
  if (information_case() != kJoin) {
    clear_information();
    set_has_join();
    _impl_.information_.join_ =
        ::google::protobuf::Message::DefaultConstruct<::PicachvMessages::JoinInformation>(GetArena());
  }
  return _impl_.information_.join_;
}
inline ::PicachvMessages::JoinInformation* TransformInfo_Information::mutable_join() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PicachvMessages::JoinInformation* _msg = _internal_mutable_join();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.TransformInfo.Information.join)
  return _msg;
}

// .PicachvMessages.GroupByInformation group_by = 3;
inline bool TransformInfo_Information::has_group_by() const {
  return information_case() == kGroupBy;
}
inline bool TransformInfo_Information::_internal_has_group_by() const {
  return information_case() == kGroupBy;
}
inline void TransformInfo_Information::set_has_group_by() {
  _impl_._oneof_case_[0] = kGroupBy;
}
inline void TransformInfo_Information::clear_group_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (information_case() == kGroupBy) {
    if (GetArena() == nullptr) {
      delete _impl_.information_.group_by_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.information_.group_by_);
    }
    clear_has_information();
  }
}
inline ::PicachvMessages::GroupByInformation* TransformInfo_Information::release_group_by() {
  // @@protoc_insertion_point(field_release:PicachvMessages.TransformInfo.Information.group_by)
  if (information_case() == kGroupBy) {
    clear_has_information();
    auto* temp = _impl_.information_.group_by_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.information_.group_by_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PicachvMessages::GroupByInformation& TransformInfo_Information::_internal_group_by() const {
  return information_case() == kGroupBy ? *_impl_.information_.group_by_ : reinterpret_cast<::PicachvMessages::GroupByInformation&>(::PicachvMessages::_GroupByInformation_default_instance_);
}
inline const ::PicachvMessages::GroupByInformation& TransformInfo_Information::group_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.TransformInfo.Information.group_by)
  return _internal_group_by();
}
inline ::PicachvMessages::GroupByInformation* TransformInfo_Information::unsafe_arena_release_group_by() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PicachvMessages.TransformInfo.Information.group_by)
  if (information_case() == kGroupBy) {
    clear_has_information();
    auto* temp = _impl_.information_.group_by_;
    _impl_.information_.group_by_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TransformInfo_Information::unsafe_arena_set_allocated_group_by(::PicachvMessages::GroupByInformation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_information();
  if (value) {
    set_has_group_by();
    _impl_.information_.group_by_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PicachvMessages.TransformInfo.Information.group_by)
}
inline ::PicachvMessages::GroupByInformation* TransformInfo_Information::_internal_mutable_group_by() {
  if (information_case() != kGroupBy) {
    clear_information();
    set_has_group_by();
    _impl_.information_.group_by_ =
        ::google::protobuf::Message::DefaultConstruct<::PicachvMessages::GroupByInformation>(GetArena());
  }
  return _impl_.information_.group_by_;
}
inline ::PicachvMessages::GroupByInformation* TransformInfo_Information::mutable_group_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PicachvMessages::GroupByInformation* _msg = _internal_mutable_group_by();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.TransformInfo.Information.group_by)
  return _msg;
}

// .PicachvMessages.ReorderInformation reorder = 4;
inline bool TransformInfo_Information::has_reorder() const {
  return information_case() == kReorder;
}
inline bool TransformInfo_Information::_internal_has_reorder() const {
  return information_case() == kReorder;
}
inline void TransformInfo_Information::set_has_reorder() {
  _impl_._oneof_case_[0] = kReorder;
}
inline void TransformInfo_Information::clear_reorder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (information_case() == kReorder) {
    if (GetArena() == nullptr) {
      delete _impl_.information_.reorder_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.information_.reorder_);
    }
    clear_has_information();
  }
}
inline ::PicachvMessages::ReorderInformation* TransformInfo_Information::release_reorder() {
  // @@protoc_insertion_point(field_release:PicachvMessages.TransformInfo.Information.reorder)
  if (information_case() == kReorder) {
    clear_has_information();
    auto* temp = _impl_.information_.reorder_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.information_.reorder_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PicachvMessages::ReorderInformation& TransformInfo_Information::_internal_reorder() const {
  return information_case() == kReorder ? *_impl_.information_.reorder_ : reinterpret_cast<::PicachvMessages::ReorderInformation&>(::PicachvMessages::_ReorderInformation_default_instance_);
}
inline const ::PicachvMessages::ReorderInformation& TransformInfo_Information::reorder() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.TransformInfo.Information.reorder)
  return _internal_reorder();
}
inline ::PicachvMessages::ReorderInformation* TransformInfo_Information::unsafe_arena_release_reorder() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PicachvMessages.TransformInfo.Information.reorder)
  if (information_case() == kReorder) {
    clear_has_information();
    auto* temp = _impl_.information_.reorder_;
    _impl_.information_.reorder_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TransformInfo_Information::unsafe_arena_set_allocated_reorder(::PicachvMessages::ReorderInformation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_information();
  if (value) {
    set_has_reorder();
    _impl_.information_.reorder_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PicachvMessages.TransformInfo.Information.reorder)
}
inline ::PicachvMessages::ReorderInformation* TransformInfo_Information::_internal_mutable_reorder() {
  if (information_case() != kReorder) {
    clear_information();
    set_has_reorder();
    _impl_.information_.reorder_ =
        ::google::protobuf::Message::DefaultConstruct<::PicachvMessages::ReorderInformation>(GetArena());
  }
  return _impl_.information_.reorder_;
}
inline ::PicachvMessages::ReorderInformation* TransformInfo_Information::mutable_reorder() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PicachvMessages::ReorderInformation* _msg = _internal_mutable_reorder();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.TransformInfo.Information.reorder)
  return _msg;
}

// .PicachvMessages.UnionInformation union = 5;
inline bool TransformInfo_Information::has_union_() const {
  return information_case() == kUnion;
}
inline bool TransformInfo_Information::_internal_has_union_() const {
  return information_case() == kUnion;
}
inline void TransformInfo_Information::set_has_union_() {
  _impl_._oneof_case_[0] = kUnion;
}
inline void TransformInfo_Information::clear_union_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (information_case() == kUnion) {
    if (GetArena() == nullptr) {
      delete _impl_.information_.union__;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.information_.union__);
    }
    clear_has_information();
  }
}
inline ::PicachvMessages::UnionInformation* TransformInfo_Information::release_union_() {
  // @@protoc_insertion_point(field_release:PicachvMessages.TransformInfo.Information.union)
  if (information_case() == kUnion) {
    clear_has_information();
    auto* temp = _impl_.information_.union__;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.information_.union__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PicachvMessages::UnionInformation& TransformInfo_Information::_internal_union_() const {
  return information_case() == kUnion ? *_impl_.information_.union__ : reinterpret_cast<::PicachvMessages::UnionInformation&>(::PicachvMessages::_UnionInformation_default_instance_);
}
inline const ::PicachvMessages::UnionInformation& TransformInfo_Information::union_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.TransformInfo.Information.union)
  return _internal_union_();
}
inline ::PicachvMessages::UnionInformation* TransformInfo_Information::unsafe_arena_release_union_() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PicachvMessages.TransformInfo.Information.union)
  if (information_case() == kUnion) {
    clear_has_information();
    auto* temp = _impl_.information_.union__;
    _impl_.information_.union__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TransformInfo_Information::unsafe_arena_set_allocated_union_(::PicachvMessages::UnionInformation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_information();
  if (value) {
    set_has_union_();
    _impl_.information_.union__ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PicachvMessages.TransformInfo.Information.union)
}
inline ::PicachvMessages::UnionInformation* TransformInfo_Information::_internal_mutable_union_() {
  if (information_case() != kUnion) {
    clear_information();
    set_has_union_();
    _impl_.information_.union__ =
        ::google::protobuf::Message::DefaultConstruct<::PicachvMessages::UnionInformation>(GetArena());
  }
  return _impl_.information_.union__;
}
inline ::PicachvMessages::UnionInformation* TransformInfo_Information::mutable_union_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PicachvMessages::UnionInformation* _msg = _internal_mutable_union_();
  // @@protoc_insertion_point(field_mutable:PicachvMessages.TransformInfo.Information.union)
  return _msg;
}

inline bool TransformInfo_Information::has_information() const {
  return information_case() != INFORMATION_NOT_SET;
}
inline void TransformInfo_Information::clear_has_information() {
  _impl_._oneof_case_[0] = INFORMATION_NOT_SET;
}
inline TransformInfo_Information::InformationCase TransformInfo_Information::information_case() const {
  return TransformInfo_Information::InformationCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TransformInfo

// repeated .PicachvMessages.TransformInfo.Information trans_info = 1;
inline int TransformInfo::_internal_trans_info_size() const {
  return _internal_trans_info().size();
}
inline int TransformInfo::trans_info_size() const {
  return _internal_trans_info_size();
}
inline void TransformInfo::clear_trans_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trans_info_.Clear();
}
inline ::PicachvMessages::TransformInfo_Information* TransformInfo::mutable_trans_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:PicachvMessages.TransformInfo.trans_info)
  return _internal_mutable_trans_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::PicachvMessages::TransformInfo_Information>* TransformInfo::mutable_trans_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PicachvMessages.TransformInfo.trans_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_trans_info();
}
inline const ::PicachvMessages::TransformInfo_Information& TransformInfo::trans_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PicachvMessages.TransformInfo.trans_info)
  return _internal_trans_info().Get(index);
}
inline ::PicachvMessages::TransformInfo_Information* TransformInfo::add_trans_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::PicachvMessages::TransformInfo_Information* _add = _internal_mutable_trans_info()->Add();
  // @@protoc_insertion_point(field_add:PicachvMessages.TransformInfo.trans_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::PicachvMessages::TransformInfo_Information>& TransformInfo::trans_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PicachvMessages.TransformInfo.trans_info)
  return _internal_trans_info();
}
inline const ::google::protobuf::RepeatedPtrField<::PicachvMessages::TransformInfo_Information>&
TransformInfo::_internal_trans_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trans_info_;
}
inline ::google::protobuf::RepeatedPtrField<::PicachvMessages::TransformInfo_Information>*
TransformInfo::_internal_mutable_trans_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.trans_info_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace PicachvMessages


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_transform_2eproto_2epb_2eh
